/* 
  ============ CONTAINER (512×256), no overflow clipping ============
*/
.diamond-container {
    position: relative;
    grid-column: span 2;
    width: 512px;
    height: 256px;
    overflow: visible; /* ensures top card not clipped */
    cursor: pointer;
    font-family: "Arial Black", sans-serif;
    z-index: 100;
  }

  @media (max-width: 375px) {
    .diamond-container {
      grid-column: 1; /* or 1 / -1, so it just becomes a single column item */
    }
  }
  
  /* 
    ============ BACKGROUND FRAME (Underneath) ============
    black, 30px radius
  */
  .diamond-bgframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 512px;
    height: 256px;
    background-color: #000;
    border: 2px solid #fff;
    border-radius: 30px;
    z-index: 0;
  }
  
  /* 
    Two lines on background frame:
    .diamond-line1 => bottom center => shown on container hover
    .diamond-line2 => bottom-right => only if top card is .clicked
  */
  .diamond-line1,
  .diamond-line2 {
    position: absolute;
    font-size: 9.89px;
    color: #fff;
    opacity: 0;
    margin: 0;
    transition: opacity 300ms ease-in-out;
  }
  
  /* line1 => bottom center => show on container hover */
  .diamond-line1 {
    bottom: 8px;
    left: 50%;
    padding-right: 12px;
    text-align: right;
  }
  .diamond-container:hover .diamond-line1 {
    opacity: 1;
  }
  
  /* line2 => bottom-right => only if top card is .clicked */
  .diamond-line2 {
    bottom: 8px;
    right: 8px;
    text-align: right;
  }
  /* If top card is .clicked => show line2 */
  .diamond-card.clicked ~ .diamond-bgframe .diamond-line2 {
    transform: translateY(-30px) rotate(-6deg) !important;
    opacity: 1;
  }
  
  /* 
    ============ TOP CARD (512×256) ============
    black, 30px radius, dark gray text (#555)
  */
  .diamond-card {
    position: absolute;
    top: 0; left: 0;
    width: 512px;
    height: 256px;
    background-color: #000;
    border: 2px solid #fff;
    border-radius: 30px;
    color: #555; /* default text color => dark gray */
    padding: 16px;
    box-sizing: border-box;
  
    font-size: 25.89px; /* ~26px base */
    line-height: 1.2;
  
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
  
    /* On hover => top card lifts up ~20px (if not clicked) */
    transition: transform 300ms ease-in-out;
  }
  
  /* Container hover => top card moves up 20px if not clicked */
  .diamond-container:hover .diamond-card:not(.clicked) {
    opacity: 0.9;
    /* transform: translateY(-30px); */
  }
  
  /* 
    If .clicked => final state => y=-40px, rotate -3°, color => #fff 
    but remove the invalid "springIn 0.6s," from transition
  */
  .diamond-card.clicked {
    opacity: .9;
    color: #fff;
    transform: translateY(-30px) rotate(-10deg);
    /* We keep a valid transition or none at all, but NOT "springIn 0.6s" */
    transition: color 300ms ease-in-out, transform 300ms ease-in-out;
  }
  
  /* 
    "Learn about our..."
  */
  .diamond-topline {
    font-size: 0.6em;
    color: #666;
    margin-bottom: 0.5em;
  }
  
  /* 
    ELLIPSE => "Pack ?" => highlight on hover
  */
  .diamond-ellipse {
    position: absolute;
    rotate: 10deg;
    top: 10px; 
    right: 10px;
    width: 60px;
    height: 60px;
    border: 2px solid;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
  }
  .diamond-ellipse p {
    position: absolute;
    top: 8px; 
    right: 0px;
    left: 0px;
    text-align: center;
    font-size: 0.5em;
    font-weight: bold;
  }
  
  .diamond-ellipse2 p1 {
    position: absolute;
    rotate: 10deg;
    top: 18px; 
    right: 10px;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    font-size: 41.89px;
    font-weight: bold;
  }

  /* On card hover => ellipse is white, text black */
  .diamond-card:not(.clicked):hover .diamond-ellipse  {
    border-color: #ffffff;
    opacity: 300ms ease-in-out;
  }
  
  /* Title & subtext */
  .diamond-title {
    font-size: 67.77px; /* ~26px */
    line-height: .8;
    margin-bottom: 0.2em;
  }
  .diamond-subtext {
    font-size: 0.6em;
    line-height: 1.3;
    max-width: 420px;
  }
  
  /* 
    ============ SPRING ANIMATION ON CLICK ============ 
    We'll define ephemeral .springIn-<key> => springIn or springOut
  */
  
  /* springIn => from transform: y=-20 => overshoot => final y=-40, rotate -3°, color => #fff */
  @keyframes springIn {
    0% {
      transform: translateY(-30px) rotate(-10deg) scale(1) ease-in-out;
      color: #555 ease-in-out;
    }
    30% {
      transform: translateY(-30px) rotate(-5deg) scale(1.1) ease-in-out;
      color: #aaa ease-in-out;
    }
    60% {
      transform: translateY(-30px) rotate(-3deg) scale(0.9) ease-in-out;
      color: #666 ease-in-out;
    }
    100% {
      transform: translateY(-30px) rotate(-10deg) scale(1) ease-in-out;
      color: #fff ease-in-out;
    }
  }
  
  /* springOut => revert from final => y=0, rotate=0, color=#555 */
  @keyframes springOut {
    0% {
      transform: translateY(-30px) rotate(-10deg);
      color: #fff;
    }
    100% {
      transform: translateY(0px) rotate(0deg);
      color: #555;
    }
  }
  
  /* ephemeral class => .springIn-<key> => run springIn 0.6s forwards */
  [class*="springIn-"] {
    animation: springIn 0.6s;
  }
  
  /* if .clicked is false => run springOut (quick revert) */
  .diamond-card:not(.clicked)[class*="springIn-"] {
    animation: springOut 0.4s;
  }
  